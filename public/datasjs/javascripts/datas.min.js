datasJs = {
    // events when the user add or remove a value
    events: {},

    version: '1.0.0',

    // generate a random UUID
    //
    //
    uuidv4: function() {
        return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>
          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
        );
    },

    // methods to manage the buttons
    //
    //
    buttons_count: function(parent_buttons) {
        // TODO: Code Me!
    },

    add_button: function(parent_buttons, h, opacity='1.0') {
        // TODO: Code Me!
    },

    disable_add_button: function(parent_buttons) {
        // disabling "add to list" button while loading list with AJAX
        let b = $(parent).find('.btn-create-export-list');
        $(b).attr('disabled', 'disabled');
    },

    enable_add_button: function(parent_buttons) {
        let b = $(parent).find('.btn-create-export-list');
        let t = $(parent).find('.input-export-lists');
        // enable only if the input is not empty
        if ($(t).val().toString().trim() != '') {
            $(b).removeAttr('disabled');
        }
    },

    disable_add_input: function(parent_buttons) {
        let t = $(parent).find('.input-export-lists');
        $(t).attr('disabled', 'disabled');
    },

    enable_add_input: function(parent_buttons) {
        let t = $(parent).find('.input-export-lists');
        $(t).removeAttr('disabled');
    },

    // methods to manage the items
    //
    //
    items_count: function(parent_items) {
        // TODO: Code Me!
    },

    set_strikethrough: function(parent_items, id, b) {
        // TODO: Code Me!
    },

    remove_all: function(parent_items) {
        // TODO: Code Me!
    },

    remove_item: function(parent_items, id) {
        // TODO: Code Me!
    },

    set_loading: function(parent_items, b) {
        // TODO: Code Me!
    },

    add_item: function(parent_items, h, opacity='1.0') {
        // TODO: Code Me!
    },

    set_item_opacity: function(parent_items, id, opacity) {
        // TODO: Code Me!
    },

    // methods to manage the widget
    //
    //
    add_item_from_input: function(parent_buttons, parent_items) {
        // get the .div-export-lists inside the parent element
        let div = $(parent).find('.div-export-lists');
        // get the input element
        o = $(parent).find('.input-export-lists');
        // create new item descriptor
        let h = {
            id: datasJs.uuidv4(),
            name: $(o).val().toString(),
            checked: true
        };
        // if it is defined the function on_check_item
        if (datasJs.events[parent.id+".on_add_item"]) {
            // call the function
            datasJs.events[parent.id+".on_add_item"](h);
        } else {
            datasJs.add_item(parent, h);
        }
    },

    draw: function(parent_buttons, parent_items, h) {
        let r = "";
        let trash_enabled = h.trash_button_enabled == null ? false : h.trash_button_enabled;
        let copy_enabled = h.copy_button_enabled == null ? false : h.copy_button_enabled;
        let strikethrough_enabled = h.strikethrough_enabled == null ? false : h.strikethrough_enabled;

        // draw the buttons component
        // iterate the array of buttons
        r += "<div class='datasjs-buttons'> ";
        r += "  <span>"+h.caption+": </span> ";
        $.each(h['buttons'], function(i, v) {
            r += "      <button class='btn btn-link add-data' data-id-lead='"+h.id+"' data-type='"+v.code+"'><i class='icon-"+v.icon+"' title='"+v.title+"'></i></button> ";
        });
        r += "  <!-- form to add data --> ";
        r += "  <div class='add-data-div' data-id-lead='"+h.id+"'> ";
        r += "      <input type='hidden' class='input-block-level add-data-type' data-id-lead='"+h.id+"' value='' /> ";
        r += "      <input type='text' class='input-block-level add-data-value' data-id-lead='"+h.id+"' value='' /> ";
        r += "      <br/> ";
        r += "      <button class='btn btn-link add-data-submit' data-id-lead='"+h.id+"'><i class='icon-ok'></i></button> ";
        r += "      <button class='btn btn-link add-data-cancel' data-id-lead='"+h.id+"'><i class='icon-remove'></i></button> ";
        r += "  </div> ";
        r += "</div> ";
        // create the HTML entities
        let o = $.parseHTML(r);
        // hide .add-data-div
        $(o).find('.add-data-div').hide();
        // add the widgets to the parent elements
        $(parent_buttons).append(o);

        // draw the items widget
        // iterate the array of items
        $.each(h['items'], function(i, v) {
            // create the child span
            let span = document.createElement('span');
            span.setAttribute('data-id-data', v.id);
            // set remove button
            if (trash_enabled) {
                let remove = document.createElement('button');
                remove.setAttribute('class', 'btn btn-link btn-remove-data');
                remove.setAttribute('data-id-lead', h.id);
                remove.setAttribute('data-id-data', v.id);
                $(remove).html('<i class="icon-trash"></i>');
                span.appendChild(remove);
            }

            // find the element into the array h.buttons with code == v.button_code
            let button = h.buttons.find(function(element) {
                return element.code == v.button_code;
            });
            
            // create icon with icon-envelope or icon-phone, depending on the type
            let span2 = document.createElement('span');
            span2.setAttribute('style', 'margin-right: 7px; color: gray;');
            let icon = document.createElement('i');
            icon.setAttribute('class', 'icon-'+button.icon);
            span2.appendChild(icon)
            span.appendChild(span2);

            // setup span class email or phone, depending on the type
            span.setAttribute('class', 'contact-info-item '+button.name);

            // set strikethrough
            if (v.strikethrough) {
                span.setAttribute('style', 'text-decoration: line-through;');
            }

            // create anchor with href mailto or tel, depending on the type
            if (button.link) {
                let a = document.createElement('a');
                a.setAttribute('href', button.link+':'+v.value);
                a.innerHTML = v.value;
                a.setAttribute('class', 'data-value');
                span.appendChild(a);
            } else {
                let txt = document.createElement('span');;
                txt.innerHTML = v.value;
                txt.setAttribute('class', 'data-value');
                span.appendChild(txt);
            }

            // add the copy button
            if (copy_enabled) {
                let copy = document.createElement('button');
                copy.setAttribute('class', 'btn btn-link btn-copy-data');
                copy.setAttribute('data-id-lead', h.id);
                copy.setAttribute('data-id-data', v.id);
                $(copy).html('<i class="icon-copy"></i>');
                span.appendChild(copy);
            }

            // add the copy button
            if (strikethrough_enabled) {
                let strikethrough = document.createElement('button');
                strikethrough.setAttribute('class', 'btn btn-link btn-strikethrough-data');
                strikethrough.setAttribute('data-id-lead', h.id);
                strikethrough.setAttribute('data-id-data', v.id);
                $(strikethrough).html('<i class="icon-ok"></i>');
                span.appendChild(strikethrough);
            }

            // add item to the list
            $(parent_items).append(span);

            // add breakrow
            $(parent_items).append('<br/>');
        });


        // iterate the buttons array into the h object
        $.each(h['buttons'], function(i, v) {
            datasJs.add_button(parent_buttons, v);
        });  

        // iterate the buttons array into the h object
        $.each(h['items'], function(i, v) {
            datasJs.add_item(parent_items, v);
        });  

        // events
        // store function to trigger when the user adds a value
        if (h['on_check_item'] != null) {
            datasJs.events[parent.id+".on_check_item"] = h['on_check_item'];
        }
    }
};